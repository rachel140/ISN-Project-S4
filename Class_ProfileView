import tkinter as tk
from PIL import Image, ImageTk


class ProfileView:
    
    def __init__(self, parent, country_per_long, sea_level=0):
        """
        Initialize the profile view for a country.
        
        Parameters:
        - parent: the parent window
        - country_per_long: dictionnary {longitude: average_elevation}
        - sea_level: float (sea will be displayed in blue)
        """
        
        self.parent = parent
        self.country_per_long = country_per_long
        self.sea_level = sea_level
        self.draw_profile()
        
       
    def draw_profile(self):
        margin_x = 20       # horizontal margin (on left and right) -nb of pixels
        margin_y = 20        # vertical margin (on top and bottom) -nb of pixels
        space_x = 5        # horizontal space between each longitude point -nb of pixels
        sea_height = 20     # height of the blue sea at the bottom -nb of pixels

        # determination highest elevation to set canvas height
        max_elev = max(self.country_per_long.values()) 

        # computation size canvas 
        width = len(self.country_per_long) * space_x + 2 * margin_x
        height = max_elev + sea_height + margin_y * 2

        # creation canvas
        self.canvas = tk.Canvas(self.parent, width=width, height=height, bg="white")
        self.canvas.pack()

        # uploading the background image
        image = Image.open("SKY.jpg")  # replace with right path
        photo = ImageTk.PhotoImage(image)
        self.canvas.create_image(0, 0, image=photo, anchor=tk.NW)
        self.canvas.image = photo

        # Display of the image in the canvas
        self.canvas.create_image(0, 0, image=photo)
        self.canvas.image = photo #to keep the image displayed

        # Draw the sea as a blue rectangle at the bottom of the canvas
        self.canvas.create_rectangle(0, height - sea_height, width, height, fill="blue", outline="blue")

        # Draw elevation points 
        points = []  # store converted (x, y) positions
        sorted_country_per_long = sorted(self.country_per_long.items())
        index = 0
        for longitude, elevation in sorted_country_per_long :
            x = margin_x + index * space_x  # X position spaced by index*5
            y = height - sea_height - elevation  # Y position inverted because canvas Y=0 is at the top
            index +=1
            points.append((x, y))
            self.canvas.create_oval(x - 1, y - 1, x + 1, y + 1, fill="black") # Draw a black dot at the point


        # Connect points with lines
        for i in range(len(points) - 1):
            x0, y0 = points[i]
            x1, y1 = points[i + 1]
            self.canvas.create_line(x0, y0, x1, y1, fill= 'green' , width=2)

        # Draw elevation scale on the right
        scale_x = width - 10  # position of the vertical scale (near right edge)
        self.canvas.create_line(scale_x, height - sea_height, scale_x, height - sea_height - max_elev, fill="black")

        # Add text labels for 0 m and max elevation
        self.canvas.create_text(scale_x - 5, height - sea_height,text="0 m", font=("comic sans ms", 10), fill='black')
        self.canvas.create_text(scale_x - 5, height - sea_height - max_elev, text=f"{int(max_elev)} m", font=("comic sans ms", 10),fill='black')

# TEST
if __name__ == "__main__":
    root = tk.Tk()
    root.title("Profile View of France")  # Profile view france
    dummy_data = {i: abs(50 - i) + 5 for i in range(100)}  # petit relief pyramidal
    ProfileView(root, dummy_data, sea_level=0)
    root.mainloop()
